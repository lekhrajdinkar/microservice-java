# Build stage
FROM eclipse-temurin:17-jdk-alpine as builder

WORKDIR /app

# Copy only the files needed for dependency resolution first (optimizes cache)
COPY pom.xml .
COPY .mvn/ .mvn
COPY mvnw .

# Make the Maven wrapper executable
RUN chmod +x mvnw

# Download dependencies (this layer will be cached unless pom.xml changes)
RUN ./mvnw dependency:go-offline -B

# Copy the rest of the source code
COPY src/ src

# Package the application
RUN ./mvnw clean package -DskipTests

# Determine JAR filename dynamically
RUN mkdir -p target/extracted && \
    java -Djarmode=layertools -jar target/*.jar extract --destination target/extracted

# Runtime stage
FROM eclipse-temurin:17-jre-alpine
WORKDIR /app

# Copy each layer from the builder stage in correct order
COPY --from=builder /app/target/extracted/dependencies/ ./
COPY --from=builder /app/target/extracted/spring-boot-loader/ ./
COPY --from=builder /app/target/extracted/snapshot-dependencies/ ./
COPY --from=builder /app/target/extracted/application/ ./

# Expose the port the app runs on
EXPOSE 8083

# Use the correct entrypoint for the Spring Boot JAR
ENTRYPOINT ["java", "org.springframework.boot.loader.launch.JarLauncher"]