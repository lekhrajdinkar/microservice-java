spring.application.name=kafkaSpringApp
server.servlet.contextPath=/kafkaSpringApp
spring.banner.location=classpath:/more/kafka/banner.txt
server.port=8091

app.kafka.topic.generic-topic-name=generic-topic
app.kafka.topic.student-topic-name=student-topic
app.kafka.topic.customer-topic-name=customer-topic

# 1 ✔️Consumer properties
app.kafka.consumer.kafka-generic-consumer-group.enabled=true
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.schema-registry-servers=http://localhost:8081
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# management.endpoints.microservice.exposure.include=health,info,prometheus

## 1.1 generic-topic

## 1.2 student-topic
student.kafka.consumer.group-id=student-avro-consumer-group
student.kafka.consumer.auto-offset-reset=earliest
student.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
student.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
student.kafka.consumer.specific.avro.reader=true
student.kafka.consumer.manual.offset=false

## 1.3 customer-topic
customer.kafka.consumer.group-id=student-avro-consumer-group
customer.kafka.consumer.auto-offset-reset=earliest
customer.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
customer.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
customer.kafka.consumer.specific.avro.reader=true
customer.kafka.consumer.manual.offset=true
customer.kafka.consumer.in.batch=true


# 2 ✔️producer properties

