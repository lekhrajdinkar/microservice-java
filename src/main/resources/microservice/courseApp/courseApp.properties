spring.application.name=courseApp
server.servlet.contextPath=/courseApp
spring.banner.location=classpath:/microservice/courseApp/banner.txt
server.port=8082

## ✅ SWAGGER API DOC
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
springdoc.packagesToScan=microservice.courseApp
springdoc.pathToScan=/**

## ✅ Database H2
packagesToScan=microservice.courseApp.repository.entity
hibernate.dialect=org.hibernate.dialect.H2Dialect
jdbc.driverClassName=org.h2.Driver
jdbc.user=sa
jdbc.pass=sa
jdbc.url=jdbc:h2:file:~/h2/courseApp
#jdbc.url=jdbc:h2:mem:courseApp
#http://localhost:8082/courseApp/h2-console

hibernate.show_sql=false
hibernate.format_sql=true

org.springframework.transaction=TRACE
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

hibernate.hbm2ddl.auto=create-drop
# validate: Checks if the database schema matches the entity mappings. Does not modify the schema.
# none:     Disables all schema management; Hibernate does not validate or change the schema.
# update:   Updates the schema to match the entity mappings, adding new tables/columns but not removing data.
# create:   Drops and recreates the schema every time the application starts. All data is lost.
# create-drop: Same as create, but also drops the schema when the application stops.


